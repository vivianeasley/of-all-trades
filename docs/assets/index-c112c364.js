(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&a(l)}).observe(document,{childList:!0,subtree:!0});function r(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function a(n){if(n.ep)return;n.ep=!0;const i=r(n);fetch(n.href,i)}})();const W=["#242424","#005555","#008888","#55bbbb","#cccccc","#cc9999","#bb5555","#aa0000","#770077","#aa00aa","#cc22cc","#cc88aa","#cccc88","#55cc55","#00aa00","#008800"];function ie(){const e=[];for(let r=0;r<W.length;r++){const a=t(W[r]);e.push(a)}return e;function t(r){var a=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;r=r.replace(a,function(i,l,s,o){return l+l+s+s+o+o});var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(r);return n?[parseInt(n[1],16),parseInt(n[2],16),parseInt(n[3],16)]:null}}function oe(e,t){return Math.sqrt(Math.pow(e[0]-t[0],2)+Math.pow(e[1]-t[1],2)+Math.pow(e[2]-t[2],2))}function se(e,t){return new Promise(r=>{var a=Number.POSITIVE_INFINITY,n;let i=0;e.forEach((l,s)=>{n=oe(t,l),n<a&&(a=n,i=s)}),r(W[i])})}async function le(e,t){const r=ie(),a=document.querySelector("#start"),n=document.querySelector("#final"),i=a.getContext("2d",{willReadFrequently:!0}),l=n.getContext("2d"),s=[],o=t?100:36,c=t?100:44;if(a.width=o,a.height=c,n.width=o,n.height=c,t)i.font="800px Arial",i.fillText(e[0],-150,20);else{i.fillStyle="#000",i.fillRect(0,0,o,c),i.font="30px Arial";for(let h=0;h<e.length;h++)i.fillText(e[h],2,40)}let u=0,m=0;for(;u<=o&&m<c;){const h=i.getImageData(u,m,1,1).data;s[m]||(s[m]=[]),s[m].push([h[0],h[1],h[2]]),u++,u>o&&(u=0,m++)}for(let h=0;h<s.length;h++)for(let g=0;g<s[h].length;g++){const b=await se(r,s[h][g]);l.fillStyle=s[h][g].join(", ")==="0, 0, 0"?"#00000000":b,l.fillRect(g,h,1,1)}return n.toDataURL("image/png")}const ce=e=>{const t={},r=["▮","▬","▰","▲","▴","▶","▸","►","▼","▾","◀","◂","◄","◆","◖","◗","◢","◣","◤","◥","◼"],a=e.getContext("2d",{willReadFrequently:!0});return t.generate=()=>{const n=[];e.width=200,e.height=200,a.filter="blur(5px)",a.font="16px Arial";let s=0;for(;s<200;){const u=r[Math.floor(Math.random()*r.length)];a.fillText(u,Math.random()*200,Math.random()*200),s++}let o=0,c=0;for(;o<=200&&c<200;){const u=a.getImageData(o,c,1,1).data;n[c]||(n[c]=[]),n[c].push(u[3]),o++,o>200&&(o=0,c++)}return n},t},de=e=>{const t=[];function r(){t.length!==0&&t.length===1&&e[t[0]]()}function a(l){l.preventDefault(),e[l.key]&&!t.includes(l.key)&&(t.push(l.key),r())}function n(l){l.preventDefault(),e[l.key]&&t.includes(l.key)&&(t.splice(t.indexOf(l.key),1),r())}function i(){document.addEventListener("keydown",a),document.addEventListener("keyup",n)}i()},F=["affectionate","afraid","aggressive","altruistic","amiable","angry","animated","annoyed","anxious","appreciative","argumentative","arrogant","attentive","awkward","bashful","bewildered","bold","bored","bossy","brave","brilliant","calm","capable","carefree","careful","caring","cautious","charismatic","charming","cheerful","childish","clever","clumsy","coarse","cold-hearted","compassionate","concerned","confident","confused","conscientious","considerate","cooperative","courageous","cowardly","creative","curious","dainty","daring","decisive","demanding","dependable","determined","devoted","dignified","diligent","discouraged","dishonest","domineering","doubtful","dreamer","eager","easygoing","efficient","encouraging","energetic","enthusiastic","exuberant","fair","fanciful","fearless","finicky","flexible","focused","forgiving","frank","friendly","frugal","frustrated","fun-loving","funny","generous","gentle","giving","gloomy","grateful","greedy","gregarious","gullible","happy","hard-working","hardy","harried","helpful","hesitant","honest","hospitable","humble","impatient","impulsive","independent","industrious","innocent","innovative","inquisitive","insistent","intelligent","intrepid","inventive","jovial","kind","lazy","light-hearted","logical","lonely","lovable","loving","malicious","meek","messy","meticulous","mischievous","moody","mysterious","naive","negligent","nervous","obliging","observant","obstinate","optimistic","organized","patient","pensive","persevering","persuasive","pessimistic","picky","pleasant","pompous","popular","positive","precise","puzzled","quarrelsome","quiet","quixotic","resourceful","sarcastic","scheming","scornful","secretive","self-reliant","sense of humor","sensitive","serious","shrewd","simple","sincere","skillful","slovenly","smart","sneaky","sociable","strange","strict","stubborn","sullen","superstitious","supportive","surly","suspicious","sweet","taciturn","talented","talkative","tenacious","tense","thankful","thorough","thoughtful","thrifty","timid","tireless","tolerant","touchy","trusting","trustworthy","truthful","unscrupulous","unselfish","upset","valiant","versatile","visionary","warm","warm-hearted","whimsical","wise","witty","unkempt","deliberative","reckless","disciplined","inefficient","envisions the unseen","fatigued","unfocused","addled","poor health","imaginative","unimaginative","innovative","knowledgeable","ignorant","observant","erratic","responsible","irresponsible","risk-taker","averse to risk","stressed","disorganized","disorderly","trustworthy","untrustworthy","careless","clumsy","lack of verbal skills","Gruff","Insecure","Conceited","Speaks in rhymes","Competitive"],ue=["Accidents","Wild animals","Bathing","Bats","Bogeyman","Crossing bridges","Bulls","Beggars","Burglars","Being buried alive","Cemeteries","Childbirth","Choking","Clouds","Confined spaces","Corpses","Crowded public places","Mobs","Crystals","death","Decaying matter","Defeat","Demons","Disease","Dogs","Dreams","Dying","Fever","Fire","Flogging","Floods","Forests","Fur (skin of animals)","Ghosts","Heat","Heights","Hell","Heredity","Holy things","Horses","Ice","Insanity","Insects","Injury","Jumping from high places","Knowledge","Lice","Lightening and thunder","Loud noises","Meteors","Mice","Mirrors","Moths","Moon","Myths","Night","Open spaces","Operations","Pain","Parasites","Pointed objects","Poison","Poverty","Priests","Puppets","Rabies","Rats","Religion","Returning home","Responsibility","Ridicule","Riding in a wagon or cart","Rivers","Road travel","Robbers","Shadows","Skin lesions","Sleep","Steep slopes","Smothering","Snakes","Snow","Spiders","Spirits","Stars","Stings","Strangers","Tapeworms","Time","Toads","Tyrants","Virgins","Washing","Wind","Witches and witchcraft","Work","Worms"],Y=["Ursula","Vera","Abigail","Antonia","Amelia","Ada","Adelaide","Adela","Adeline","Adriana","Agatha","Ailith","Alana","Alberta","Albina","Alexandra","Alexis","Allegra","Angelica","Altabella","Ama","Antonia","Annora","Ava","Beatrice","Cecilia","Eira","Ella","Eleanor","Elisaria","Euphemia","Genevieve","Gunnora","Heloise","Honora","Helen","Joan","Matilda","Mirabel","Nezetta","Nadalinde","Olive","Osanna","Petra","Philomena","Phoebe","Portia","Regina","Sabina","Serena","Sibyl","Sophia","Stella","Thora","Ursula","Vera","Winifred","Zelda"],z=["Abraham","Absalom","Abelard","Acfrid","Achard","Adam","Adelo","Aderich","Ailbern","Adrewic","Adrian","Alaric","Albin","Alexander","Alfwin","Aldebrand","Ambrose","Alamand","Alard","Alaric","Alf","Alwin","Anthony","Archibald","Arthur","Aldo","Alphonse","Abelard","Benedict","Bartholomew","Bertram","Crispin","Daegal","Drustan","Edmund","Elric","Emil","Florian","Gandalf","Godfrey","Gregory","Grimwald","Hamlin","Hawk","Hildebald","Kenric","Leif","Lothar","Morcant","Oliver","Orvyn","Richard","Randolf","Roland","Torsten","Wilkin","Balthasar"],L=["Gervaise","Wainwright","Heathcliff","Albrecht","Hildebrand","Devereaux","Heinrich","Tudor","Templeton","Braxton","Jacobo","Mannix","Benedict","Beckett","Wesley","Maynard","Kimball","Otto","Bassett","Wallace","Oakes","Lister","Tobias","Conrad","Jasper","Bayard","Burne","Hyde","Walden","Gilbert","Fleming","Mann","Rowe","Hammond","Ballard","Kirby","Aiken","Beasley","Frost","Giles","Felix","Harding","Dudley","Barlow","Lange","Pierson","Denton","Courtney","Brandon","Weston","Daley","Elias","Larkin","Godwin","Boswell","Jarrett","Lovell","Roland","Moreland","Lorenzo","Aldrich","Ambrose","Bartley","Thayer","Fenton","Dietrich","Borden","Bartholomew","Garvin","Cecil","Lyman","Brant","Charlton","Seward","Easton","Nilson","Andre","Dayton","Archibald","Ralph","Leo","Aston","Berkeley","Carleton","Kipling","Sherwin","Alton","Bradburn","Osmond","Chilton","Mendel","Birney","Rawlins","Edison","Lyndon","Marden","Atherton","Amaury","Aramis","Brawley","Geoffrey","Haynes","Hill","Hughes","Kimball","Klein","Koch","Kruger","Maddock","Norman","Nuemann","Payne","Schafer","Schneider","Taylor","Turner","Wood","Beckett","Brewer","Browne","Carey","Ead","Aaberg","Adalbert","Albrecht","Alwyn","Annora","Arvel","Ashdown","Audovera","Badden","Bartholomew","Burchard","Cosimo","Enegram","Frithswith","Grimald","Hankin","Hilith","Isolda","Kaiser","Louthy","MacQuoid","Mannering","Merek","Nesta","Olbrecht","Pernelle","Pythias","Rainilda","Rolfe","Sallow","Squire","Terrowin","Theano","Tonis"],fe=["red","white","curly","blonde"],V=[["Peddler","Hunter","Trapper"],["Woodcutter","Shepherd","Farmer"],["miner","Tanner","Ropemaker","Brewer","Explorer","Healer"],["Fisherman","Cook","Shipwright","Merchant","Sailor","Blacksmith","Carpenter","Cartographer"],["Lord","Tailor","Confectioner","Leatherworker","Banker","Weaver"]],U={visualFeature:["Heterochromia","Goiter","Rickets","Missing fingers","Birthmark","Beautiful","Burn mark","Freckles","Short","Tall","Frail","Stout","Dimples","Scars","Unkempt","Callouses"]},q={motivation:["Survival","Love","Honor","Control","Save","Serve","Rule","Destroy","Grief","Betrayal","Fear","Escape","Revenge","Recover","Justice","Desire","Discover","Achieve","Hate","Ambition"],traitMain:F,trait:F,traitLesser:F,fear:ue};let A={};function j(){A={};const e=Math.random(),t=p(1,10)+p(1,10)+p(1,10)+p(1,10),r=ee(fe);return A.name=me(e),A.age=t,A.hair=r,pe(),ge(),A.imageId=he(t,e,r),A}function he(e,t,r){if(e<=5)return 9;if(e<=11)return 10;if(e>60&&t<.3)return 16;if(e>60&&t>.7)return 21;if(e>60)return 11;if(t<.3)return a(17,r);if(t>.7)return a(22,r);return a(12,r);function a(n,i){if(i==="curly")return n;if(i==="red")return n+1;if(i==="white")return n+2;if(i==="blonde")return n+3}}function _(e,t,r){let a="";for(const i in e)i==="name"?a+=`<details closed><summary>${e[i]} - ${t}</summary>`:i==="imageId"?a+=`<div><img src="${r[e.imageId]}"></div>`:a+=`<div>${ye(i)}: <span class="bold">${e[i]}</span></div>`;a+="</details>";const n=document.createElement("span");return n.innerHTML=a,n}function me(e){const t=L[Math.floor(Math.random()*L.length)];return e<=.5?`${Y[Math.floor(Math.random()*Y.length)]} ${t}`:`${z[Math.floor(Math.random()*z.length)]} ${t}`}function ge(){for(const e in q)A[e]=q[e][Math.floor(Math.random()*q[e].length)];return A}function pe(){for(const e in U)A[e]=ee(U[e]);return A}function ee(e){const t=[...e,...e.reverse()],r=Math.ceil(t.length/2),a=p(0,r)+p(0,r);return t[a]?t[a]:t[t.length-1]}function p(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1)+e)}function ye(e){const t=e.replace(/([a-z])([A-Z])/g,"$1 $2").split(" ");let r="";return t.forEach(a=>{r=r+a.charAt(0).toUpperCase()+a.slice(1)+" "}),r}const we=["Chicken says cluck","Pig says oink","Cow says mooo","Sheep says baaa"],be=["Deer says EEuurrruu","Owl says hooo","Rat says squeak","Bat says chirp"],S=document.querySelector("#story"),Z=document.querySelector("svg"),f=[8,8],d=[100,100];let P;const J=["🧕","🌲","🌳","🛖","🏚️","⛪","🏛️","🏯","🏰","👶","🧒","🧓","🧑‍🦱","🧑‍🦰","🧑‍🦳","🧑","👵","👩‍🦱","👩‍🦰","👩‍🦳","👱‍♀️","👴","👨‍🦱","👨‍🦰","👨‍🦳","🧔","🐓","🐖","🐂","🐏","🦌","🦉","🐀","🦇","🪨","🛸","🪵","⛲","🦑","🧜‍♂️","✨"],k=[];let M=0;const B=V.flat();for(let e=0;e<B.length;e++){const t=document.createElement("li");t.textContent=B[e]+" - not apprenticed",document.querySelector("ol").appendChild(t)}const v=ke(),ve=document.querySelector("#perlin"),te=ce(ve);let O;const Ae=te.generate(),Me={water:"#00445a",plains:"#359135",forest:"#005a00",mountain:"grey",snow:"#f1f1f1"},Ce={w:()=>C(-1,-1),d:()=>C(-1,1),a:()=>C(1,-1),s:()=>C(1,1),q:()=>C(0,-1),z:()=>C(1,0),x:()=>C(0,1),e:()=>C(-1,0)},T=()=>{var e,t;return(t=(e=v[f[1]])==null?void 0:e[f[0]])==null?void 0:t.data};function C(e,t){var l,s,o,c,u,m,y,h,g;const r=T(),a=["forest","plains"];if(M<17&&a.push("water"),!((l=r[d[1]+t])!=null&&l[d[0]+e])){if(d[1]>=199){if(!((s=v[f[1]+1])!=null&&s[f[0]]))return;f[1]=f[1]+1;let b=(o=v[f[1]])==null?void 0:o[f[0]];if(d[1]=0,typeof b[0]=="number")H();else{const w=I(d[0],d[1],a);d[0]=w[0],d[1]=w[1],x()}return}if(d[1]<=0){if(!((c=v[f[1]-1])!=null&&c[f[0]]))return;let b=(u=v[f[1]])==null?void 0:u[f[0]];if(d[1]=199,typeof b[0]=="number")H();else{const w=I(d[0],d[1],a);d[0]=w[0],d[1]=w[1],x()}return}if(d[0]>=199){if(!((m=v[f[1]])!=null&&m[f[0]+1]))return;f[0]=f[0]+1;let b=(y=v[f[1]])==null?void 0:y[f[0]];if(d[0]=0,typeof b[0]=="number")H();else{const w=I(d[0],d[1],a);d[0]=w[0],d[1]=w[1],x()}return}if(d[0]<=0){if(!((h=v[f[1]])!=null&&h[f[0]-1]))return;f[0]=f[0]-1;let b=(g=v[f[1]])==null?void 0:g[f[0]];if(d[0]=199,typeof b[0]=="number")H();else{const w=I(d[0],d[1],a);d[0]=w[0],d[1]=w[1],x()}return}}const n=ne(r[d[1]+t][d[0]+e].elevation);if(n==="mountain"&&M<8){S.textContent="You need to have apprenticed with a ropemaker to ascend mountains.";return}if(n==="water"&&M<17){S.textContent="You need to have apprenticed with a shipwright to sail across the ocean.";return}if(n==="snow"&&M<24){S.textContent="You need to have apprenticed with a tailor to travel in snowy peaks.";return}d[0]=d[0]+e,d[1]=d[1]+t;const i=r[d[1]][d[0]].person;if(B[M]&&(i==null?void 0:i.profession)===B[M]){const b=document.querySelectorAll("ol > li"),w=_(i.data,i.profession,k);b[M].textContent="",b[M].appendChild(w),M++}x()}de(Ce);setTimeout(async()=>{await Te(),H()},1e3);async function H(){O=[...v[f[1]][f[0]]],v[f[1]][f[0]]={name:L[f[1]+f[0]],locs:[],data:te.generate()},await xe();const e=I(d[0],d[1],["forest","plains"]);d[0]=e[0],d[1]=e[1],Ie(),x()}function I(e,t,r){const a=T();let n=1,i=0;const l=[[-1,1],[1,-1],[1,1],[-1,-1],[0,1],[-1,0],[0,-1],[1,0]];for(;n<49;){l[i]||(i=0);const s=t+n*l[i][0],o=e+n*l[i][1],c=a[s]?a[s][o]:void 0;if(c&&r.includes(c.biome))return[o,s];n++,i++}}function ke(){let e=0,t=0;const r=[];for(let a=0;a<15;a++){r.push([]);for(let n=0;n<15;n++){r[a].push([]);const i=Math.random();e<1&&a>1&&i>.95&&(P=[n,a],r[a][n].push(5),e++),t<5&&i>.7&&(r[a][n].push(4),t++),Math.random()>.5&&r[a][n].push(3);for(let l=0;l<10;l++)Math.random()>.7&&r[a][n].push(2),Math.random()>.6&&r[a][n].push(1)}}return e===0&&(P=[0,0],r[0][0].push(5),e++),r}function ne(e){if(e<20)return"water";if(e>=20&&e<88)return"plains";if(e>=88&&e<158)return"forest";if(e>=158&&e<200)return"mountain";if(e>=200)return"snow"}async function xe(){const e=T();for(let t=0;t<e.length;t++)for(let r=0;r<e[t].length;r++){const a=await Se(e[t][r],t,r);e[t][r]=a}}async function Ie(){var a,n,i;const e=["Homestead","Farm","Village","Town","City"],t=T();for(let l=0;l<O.length;l++){const s=O[l];let o=p(0,(t==null?void 0:t.length)??20),c=p(0,((a=t[o])==null?void 0:a.length)??20);const u=r(s,c,o);for(let m=0;m<6-s;m++){let y=u[0],h=u[1];y=y+m*p(-2,2),h=h+m*p(-2,2);const g=r(s,h,y);v[f[1]][f[0]].locs.push([g[0],g[1]]),t[g[1]][g[0]].structure={type:e[s-1],imageId:p(0,s-1)+2};for(let b=0;b<p(1,1+s);b++){let w=y+p(-2,2),E=h+p(-2,2);w===y&&(w+=1),E===h&&(E+=1),w=w,E=E;const D=r(s,E,w),$=j(),G=V[s-1];let R=G[Math.floor(Math.random()*G.length)];if($.age<20&&(R=R),$.age<10&&(R="Child"),$.age<4&&(R="Infant"),t[D[1]][D[0]].person={data:$,imageId:$.imageId,profession:R},s===1||s===2&&Math.random()>.3){const N=p(0,3),re=p(-1,1),ae=p(-1,1),K=(n=t[D[1]+re])==null?void 0:n[D[0]+ae];K&&(K.animal={id:N,imageId:26+N,story:we[N]})}}}}for(let l=0;l<p(80,100);l++){let s=p(0,(t==null?void 0:t.length)??20),o=p(0,((i=t[s])==null?void 0:i.length)??20);if(Math.random()>.3){const c=r(6,o,s),u=p(0,3);t[c[1]][c[0]].animal={id:u,imageId:30+u,story:be[u]}}else{const c=r(7,o,s),u=j(),m=B[Math.floor(Math.random()*B.length)];t[c[1]][c[0]].person={data:u,imageId:u.imageId,profession:m,isWander:!0}}}function r(l,s,o){let c=l===4||l===5?["plains"]:["forest","plains"];return l===6&&(c=["forest","plains","mountain","water"]),l===7&&(c=["forest","plains","mountain","snow"]),I(o,s,c)}}function Se(e,t,r){return new Promise(a=>{const n=ne(e),i=Be(n,e,Ae[t][r]);a({elevation:e,color:Me[n],biome:n,tree:i,person:void 0,structure:void 0,animal:void 0,special:void 0})})}function Be(e,t,r){let a;if(r>18){let n=!1;return(t===19&&Math.random()>.98||e==="forest"&&Math.random()>.4||e==="plains"&&Math.random()>.85||e==="mountain"&&Math.random()>.85||e==="snow"&&Math.random()>.98)&&(n=!0),n&&(a={imageId:t>100?1:2}),a}}let Q=!1;function x(){var s;const e=document.querySelectorAll(".tile"),r=T()[d[1]][d[0]];let a="";S.innerHTML="",Q||(a+="You set out on your journey to apprentice your way to the top! Start by finding a Peddler to apprentice under then a hunter, and so on.",Q=!0),r.structure&&(a+=`You approach a ${r.structure.type}. `),r.animal&&(a+=`${r.animal.story}. `);let n;if(r.person){if(a+=`You meet a ${r.person.profession} named ${r.person.data.name}. `,r.person.isWander){Math.random()>.7&&(a+=`They tell you of the largest city in the area. They say it's located in the fiefdom of ${L[P[1]+P[0]]}. `),a+=`The ${r.person.profession} shares the location of a settlment in this fiefdom: `;const o=(s=v[f[1]])==null?void 0:s[f[0]].locs;a+=`${o[Math.floor(Math.random()*o.length)].join("-")}`}n=_(r.person.data,r.person.profession,k)}if(a===""&&(a+=`Location ${L[f[1]+f[0]]} fiefdom ${d.join("-")}. `),S.textContent=a,n&&S.append(n),e.length>0)for(let o=0;o<e.length;o++)e[o].remove();const i=d[0]-3,l=d[1]-3;for(let o=0;o<14;o++){let c=0;if(o<=6)for(;o-c>-1;){const u=[350-50*o+c*100,25*o-c],m=[o-c+i,c+l];X([`M ${u[0]} ${u[1]} l 50 25 l -50 25 l -50 -25 Z`,`M ${u[0]-50} ${u[1]+25} l 50 25 l 0 45 l -50 -25 Z`,`M ${u[0]} ${u[1]+50} l 50 -25 l 0 45 l -50 25 Z`],m[0]+"-"+m[1],"stone",u,m),c++}else for(;c+(o-6)<7;){const u=[50+50*(c+(o-6))+c*50,25*o-c],m=[6-c+i,c+(o-6)+l];X([`M ${u[0]} ${u[1]} l 50 25 l -50 25 l -50 -25 Z`,`M ${u[0]-50} ${u[1]+25} l 50 25 l 0 45 l -50 -25 Z`,`M ${u[0]} ${u[1]+50} l 50 -25 l 0 45 l -50 25 Z`],m[0]+"-"+m[1],"stone",u,m),c++}}}function X(e,t,r,a,n){var m;const i=T();let l=c("g");if(!((m=i[n[1]])!=null&&m[n[0]]))return;const s=i[n[1]][n[0]];for(let y=0;y<e.length;y++){let h=c("path",e[y]);h.setAttribute("fill",s.color),y>0&&h.setAttribute("opacity",.7),l.appendChild(h)}l.classList.add("tile"),l.dataset.xyid=t;let o=i[d[1]][d[0]].elevation-s.elevation;s.biome==="water"&&(o=o*.5),s.biome==="mountain"&&(o=o*2),s.biome==="snow"&&(o=o*2.5),l.setAttribute("transform",`translate(0, ${o})`),l.setAttribute("opacity",1-o*.015),Z.appendChild(l),s.tree&&u(k[s.tree.imageId]),s.structure&&u(k[s.structure.imageId]),s.animal&&u(k[s.animal.imageId]),s.person&&u(k[s.person.imageId]),t===d.join("-")&&u(k[0],"player");function c(y,h){let g=document.createElementNS("http://www.w3.org/2000/svg",y);return h&&y==="path"&&g.setAttribute("d",h),g}function u(y,h){const g=c("image");g.setAttribute("href",y),g.setAttribute("width",100),g.setAttribute("height",100),g.classList.add("tile"),h&&g.classList.add(h),g.setAttribute("x",a[0]-50),g.setAttribute("y",a[1]-70),g.setAttribute("transform",`translate(0, ${o})`),g.setAttribute("opacity",1-o*.01),Z.appendChild(g)}}async function Te(){for(let e=0;e<J.length;e++){const t=await le([J[e]]);k.push(t)}}
